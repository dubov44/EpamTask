@model EpamLibrary.WEB.Models.BookVM.BookEditModel

@{
    ViewBag.Title = "Edit";
}

@section Body{
    @using (Html.BeginForm("Edit", "Book", FormMethod.Post,
    new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="book-form">
            <div class="cotainer">
                <div class="row justify-content-center">
                    <div class="col-md-10">
                        <div class="card">
                            <div class="card-header"><h3>Edit Book</h3></div>
                            <div class="card-body">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <form action="" method="">
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-md-4 col-form-label text-md-right" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "col-md-4 col-form-label text-md-right" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.PublicationDate, htmlAttributes: new { @class = "col-md-4 col-form-label text-md-right" })
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(x => x.PublicationDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
                                            @Html.ValidationMessageFor(model => model.PublicationDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Authors, htmlAttributes: new { @class = "col-md-4 col-form-label text-md-right" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.Authors, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Authors, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Discription, htmlAttributes: new { @class = "col-md-4 col-form-label text-md-right" })
                                        <div class="col-md-6">
                                            @Html.TextAreaFor(model => model.Discription, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Discription, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Genres, htmlAttributes: new { @class = "col-md-4 col-form-label text-md-right" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.Genres, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Genres, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "col-md-4 col-form-label text-md-right" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <label class="col-md-4 col-form-label text-md-right">Cover</label>
                                        <div class="editor-field">
                                            <input type="file" name="Image" id="Image" accept=".jpg,.jpeg,.png" />
                                        </div>
                                    </div>

                                    <div class="col-md-6 offset-md-5">
                                        <button type="submit" class="btn btn-primary">
                                            Edit
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

}